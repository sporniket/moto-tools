10 CLS:PRINT "LSYSTEM pour MO5 - v0.0.0"
20 PRINT "(c)2023 DAVID SPORN"
25 PRINT "LICENSE : GPLv3+"
30 PRINT "---"
40 DEFINT A-E,G-K,M-W:'F.. X.. Y.. Z.. AS FLOAT, L.. AS LONG INT (FLOAT AS LONG INT DO NOT EXIST)
198 PRINT "JE ME PREPARE..."
199 '=== INIT TABLE TANSCODAGE ===
200 DIM CODE(255):FOR I=0 TO 255:CODE(I)=0:NEXT I
210 CODE(ASC("+"))=1
220 CODE(ASC("-"))=2
230 CODE(ASC("("))=3
240 CODE(ASC(")"))=4
250 FOR I=0 TO 25:CODE(65+I)=128+I:CODE(97+I)=128+I:NEXT I
260 PRINT"TRANSCODAGE PRET..."
299 '=== STOCKAGE DES REGLES ===
300 SGRAINE$="F+F+F+F+F+F":IANGLE=60
310 DIM SREGLES$(25):FOR I=0 TO 25:SREGLES$(I)="":NEXT I:SREGLES$(5)="F-F++F-F"
320 PRINT "REGLES PRECHARGEES..."
399 '=== CONTEXTE DESSIN ===
400 DIM FUNIT(359,1):FOR I=0 TO 359:FTHETA=1.57-6.28*I/360:FUNIT(I,0)=COS(FTHETA):FUNIT(I,1)=-SIN(FTHETA):NEXT I:'VCT UNITAIRE PAR DIRECTION,0=NORD,SENS HORAIRE
402 PRINT "DEPLACEMENTS UNITAIRES PRETS..."
410 DIM FPSTACK(100,2):DIM IANGSTACK(100):ISTACK=0:'PILE DE CONTEXTES GRAPHIQUES,POS ET ANG,CONTEXTE ACTIF
412 PRINT "CONTEXTES GRAPHIQUES PRETS..."
420 DIM FBOUNDS(1,1):FOR I=0 TO 1:FOR J=0 TO 1:FBOUNDS(I,J)=0:NEXT J:NEXT I:'BOITE ENGLOBANTE DU DESSIN
430 FSCLX=1:FSCLY=1:FTRNSX=0:FTRNSY=0
899 '=== INIT RING BUFFER ===
900 LMEM=FRE(0)-2048:'GARDE AU MOINS 2KIO POUR LE BASIC
910 LRESRV=FIX(LMEM/4096)*4096
920 PRINT "TAILLE MEMOIRE TAMPON :",LRESRV
930 LBUFEND=40900:LBUFBEG=LBUFEND-LRESRV:LBUFSIZ=LRESRV:'DO NOT MODIFY
940 LBUFPOS=LBUFBEG:'CURSOR TO NEXT POSITION INTO WHICH DO THE INSERTION
950 LCURBEG=LBUFBEG:LCURSIZ=0:'SUB BUFFER FOR CURRENT SEQUENCE
960 LNEXBEG=LCURBEG+LCURSIZ:LNEXSIZ=0:'SUB BUFFER FOR NEXT SEQUENCE
970 LNEXPTR=LNEXBEG:'INSERTION POINT
1199 '=== MENU ===
1200 PRINT "==="
1210 PRINT "1. REVUE":PRINT "2. SAISIE":PRINT "3. DEMARRER":PRINT "#. FIN"
1220 INPUT "VOTRE CHOIX ?",CHX$
1230 IF "#"=CHX$ THEN END
1240 IF "1"=CHX$ THEN GOSUB 2700:'1500
1250 IF "2"=CHX$ THEN GOSUB 2000
1260 IF "3"=CHX$ THEN GOSUB 3000
1300 GOTO 1200
1500 PRINT "=== REVUE ===":'CODE MORT - SUPPRIMER
1510 IF LEN(SGRAINE$)=0 THEN PRINT"PAS DE GRAINE !" ELSE PRINT "GRAINE:";SGRAINE$
1520 FOR I=0 TO 8:IF LEN(SREGLES$(I))>0 THEN PRINT CHR$(65+I);":";SREGLES$(I) ELSE PRINT "PAS DE REGLE ";CHR$(65+I):NEXT I
1530 PRINT:INPUT "TOUCHE ENTREE POUR LA SUITE",WTVR$:PRINT
1540 FOR I=9 TO 17:IF LEN(SREGLES$(I))>0 THEN PRINT CHR$(65+I);":";SREGLES$(I) ELSE PRINT "PAS DE REGLE ";CHR$(65+I):NEXT I
1550 PRINT:INPUT "TOUCHE ENTREE POUR LA SUITE",WTVR$:PRINT
1560 FOR I=18 TO 25:IF LEN(SREGLES$(I))>0 THEN PRINT CHR$(65+I);":";SREGLES$(I) ELSE PRINT "PAS DE REGLE ";CHR$(65+I):NEXT I
1570 PRINT:INPUT "TOUCHE ENTREE POUR LA SUITE",WTVR$:PRINT
1999 RETURN
2000 PRINT "=== SAISIE ==="
2010 PRINT "===":PRINT "1. SAISIR LA GRAINE":PRINT "2. SAISIR L'ANGLE":PRINT "A-Z. SAISIR UNE REGLE":PRINT "#. RETOUR AU MENU PRINCIPAL"
2020 INPUT "VOTRE CHOIX (VIDE POUR REVUE) ?",CHX$
2030 IF "#"=CHX$ THEN RETURN
2040 IF LEN(CHX$)=0 THEN GOSUB 2700:GOTO 2000
2050 IF "1"=CHX$ THEN GOSUB 2500
2060 IF ASC(CHX$)>=65 AND ASC(CHX$)<91 THEN GOSUB 2400
2070 IF "2"=CHX$ THEN GOSUB 2510
2299 GOTO 2000
2400 SPROMPT$=LEFT$(CHX$,1)+"=":GOSUB 2600:SREGLES$(ASC(CHX$)-65)=SVAL$:RETURN
2500 SPROMPT$="GRAINE=":GOSUB 2600:SGRAINE$=SVAL$:RETURN
2510 SPROMPT$="ANGLE(0..359)=":GOSUB 2600:IANGLE=ABS(VAL(SVAL$)) MOD 360:RETURN
2599 'SUBROUTINE - ENTREE TEXTE
2600 PRINT SPROMPT$:LINE INPUT SVAL$
2610 IF LEN(SVAL$)=0 THEN RETURN
2620 ICNTPAR=0:'COMPTE PARENTHESES
2630 FOR I=1 TO LEN(SVAL$):SCHAR$=MID$(SVAL$,I,1):'PRINT SCHAR$
2640 IF "("=SCHAR$ THEN ICNTPAR=ICNTPAR+1
2645 IF ")"=SCHAR$ THEN ICNTPAR=ICNTPAR-1
2650 NEXT I
2660 IF ICNTPAR=0 THEN RETURN
2670 PRINT "ERREUR DE PARENTHESES !":GOTO 2600
2699 GOTO 2000
2700 PRINT "GRAINE :";SGRAINE$:ICNT=1
2702 PRINT "ANGLE  :";IANGLE:ICNT=ICNT+1
2710 FOR I=0 TO 25
2712 'PRINT I,SREGLES$(I)
2714 IF LEN(SREGLES$(I))>0 THEN GOSUB 2810
2716 IF ICNT>8 THEN GOSUB 2800
2718 NEXT I
2720 IF ICNT>0 THEN GOSUB 2800
2730 RETURN
2799 '=== SUBROUTINE - PAUSE ECRAN ===
2800 ICNT=0:PRINT:INPUT "TOUCHE ENTREE POUR LA SUITE",WTVR$:PRINT:RETURN
2809 '=== SUBROUTINE - AFFICHE REGLE I ===
2810 PRINT CHR$(65+I);":";SREGLES$(I):ICNT=ICNT+1:RETURN
2999 GOTO 2000
3000 PRINT "=== DEMARRAGE... ==="
3009 'COPIE LA GRAINE AVEC TRANCODAGE
3010 LPTR=VARPTR(SGRAINE$):ISIZ=PEEK(LPTR)
3020 LSRC=PEEK(LPTR+1)*256+PEEK(LPTR+2)
3030 FOR I=1 TO ISIZ
3040 POKE LNEXPTR,CODE(PEEK(LSRC)):LSRC=LSRC+1:LNEXSIZ=LNEXSIZ+1:LNEXPTR=LNEXPTR+1
3050 IF LNEXPTR>=LBUFEND THEN LNEXPTR=LBUFBEG
3060 NEXT I
3070 'PRINT LBUFBEG;LBUFEND;LNEXPTR;LNEXSIZ
3072 'FOR LPTR=LBUFBEG TO LNEXPTR-1:PRINT PEEK(LPTR);:NEXT LPTR
3080 'DONE - PROMOTE NEXT AS CURRENT
3088 'PRINT LBUFBEG;LNEXBEG;LCURBEG
3090 LCURBEG=LNEXBEG:LCURSIZ=LNEXSIZ:LNEXBEG=LNEXPTR:LNEXSIZ=0
3100 INPUT "NOMBRE D'ITERATION (2..10) ",ITERMAX
3110 IF ITERMAX<2 THEN ITERMAX=2
3120 IF ITERMAX>10 THEN ITERMAX=10
3128 IRETCOD=9999:'SET TO 0 WHEN DONE
3130 FOR ITER=1 TO ITERMAX
3140 LCURPTR=LCURBEG
3150 FOR I=1 TO LCURSIZ
3160 INEXCOD=PEEK(LCURPTR)
3170 IF INEXCOD<128 THEN GOTO 3250:'COPY CODE"
3180 LPTR=VARPTR(SREGLES$(INEXCOD-128)):ISIZ=PEEK(LPTR):LSRC=PEEK(LPTR+1)*256+PEEK(LPTR+2):'PERFORM SUBSTITUTION
3190 FOR J=1 TO ISIZ
3200 POKE LNEXPTR,CODE(PEEK(LSRC)):LSRC=LSRC+1:LNEXSIZ=LNEXSIZ+1:LNEXPTR=LNEXPTR+1
3210 IF LNEXPTR>=LBUFEND THEN LNEXPTR=LBUFBEG
3212 IF LNEXPTR=LCURBEG THEN PRINT"OUT OF MEMORY":STOP
3220 NEXT J
3230 'PRINT LBUFBEG;LBUFEND;LNEXPTR;LNEXSIZ
3240 GOTO 3290:'END OF STEP
3250 POKE LNEXPTR,INEXCOD:'COPY CODE
3260 LNEXSIZ=LNEXSIZ+1:LNEXPTR=LNEXPTR+1
3270 IF LNEXPTR>=LBUFEND THEN LNEXPTR=LBUFBEG
3280 IF LNEXPTR=LCURBEG THEN PRINT"OUT OF MEMORY":STOP
3290 LCURPTR=LCURPTR+1:'END OF STEP
3300 IF LCURPTR>=LBUFEND THEN LCURPTR=LBUFBEG
3310 NEXT I
3320 LCURBEG=LNEXBEG:LCURSIZ=LNEXSIZ:LNEXBEG=LNEXPTR:LNEXSIZ=0:'COMMIT STEP
3330 ICNTITR=ITER
3340 PRINT "ETAPE";ITER;"=>";LCURSIZ
3350 NEXT ITER
3360 PRINT "CALIBRATION DESSIN..."
3370 LCURPTR=LCURBEG
3380 FPSTACK(ISTACK,0)=0:FPSTACK(ISTACK,1)=0:IANGSTACK(ISTACK)=0
3390 FOR I=0 TO 1:FOR J=0 TO 1:FBOUNDS(I,J)=0:NEXT J:NEXT I:'RESET BOITE ENGLOBANTE DU DESSIN
3400 FSCLX=1:FSCLY=1:FTRNSX=0:FTRNSY=0
3410 FOR I=1 TO LCURSIZ
3420 INEXCOD=PEEK(LCURPTR)
3430 IF INEXCOD>=128 THEN GOSUB 4000
3440 IF INEXCOD=1 THEN GOSUB 4100
3450 IF INEXCOD=2 THEN GOSUB 4200
3460 IF INEXCOD=3 THEN GOSUB 4300
3470 IF INEXCOD=4 THEN GOSUB 4400
3472 LCURPTR=LCURPTR+1:IF LCURPTR=LBUFEND THEN LCURPTR=LBUFBEG
3480 NEXT I
3482 PRINT FBOUNDS(0,0);FBOUNDS(0,1)
3484 PRINT FBOUNDS(1,0);FBOUNDS(1,1)
3486 INPUT CHX$
3490 CLS:PRINT "DESSIN";
3500 FSCLX=310/(FBOUNDS(1,0)-FBOUNDS(0,0)):FSCLY=180/(FBOUNDS(1,1)-FBOUNDS(0,1))
3510 'IF FSCLX<FSCLY THEN FSCLY=FSCLX ELSE FSCLX=FSCLY
3520 FTRNSX=5-FBOUNDS(0,0)*FSCLX:FTRNSY=10-FBOUNDS(0,1)*FSCLY
3530 FPSTACK(ISTACK,0)=FTRNSX:FPSTACK(ISTACK,1)=FTRNSY:IANGSTACK(ISTACK)=0
3538 LCURPTR=LCURBEG
3540 FOR I=1 TO LCURSIZ
3550 INEXCOD=PEEK(LCURPTR)
3560 IF INEXCOD>=128 THEN GOSUB 4500
3570 IF INEXCOD=1 THEN GOSUB 4100
3580 IF INEXCOD=2 THEN GOSUB 4200
3590 IF INEXCOD=3 THEN GOSUB 4300
3600 IF INEXCOD=4 THEN GOSUB 4400
3602 LCURPTR=LCURPTR+1:IF LCURPTR=LBUFEND THEN LCURPTR=LBUFBEG
3610 NEXT I
3620 INPUT CHX$
3630 IRETCOD=0
3700 RETURN
4000 'AVANCE
4010 FPSTACK(ISTACK,0)=FPSTACK(ISTACK,0)+FUNIT(IANGSTACK(ISTACK),0)
4020 FPSTACK(ISTACK,1)=FPSTACK(ISTACK,1)+FUNIT(IANGSTACK(ISTACK),1)
4022 'PRINT FPSTACK(ISTACK,0);FPSTACK(ISTACK,1)
4030 IF FPSTACK(ISTACK,0)<FBOUNDS(0,0) THEN FBOUNDS(0,0)=FPSTACK(ISTACK,0)
4040 IF FPSTACK(ISTACK,1)<FBOUNDS(0,1) THEN FBOUNDS(0,1)=FPSTACK(ISTACK,1)
4050 IF FPSTACK(ISTACK,0)>FBOUNDS(1,0) THEN FBOUNDS(1,0)=FPSTACK(ISTACK,0)
4060 IF FPSTACK(ISTACK,1)>FBOUNDS(1,1) THEN FBOUNDS(1,1)=FPSTACK(ISTACK,1)
4070 RETURN
4100 'TOURNE DROITE
4110 IANGSTACK(ISTACK)=(IANGSTACK(ISTACK)+IANGLE) MOD 360
4120 RETURN
4200 'TOURNE GAUCHE
4210 IANGSTACK(ISTACK)=(360+IANGSTACK(ISTACK)-IANGLE) MOD 360
4220 RETURN
4300 'OUVRE BRANCHE
4310 IF ISTACK=100 THEN PRINT "TROP DE BRANCHES OUVERTES":STOP
4320 IANGSTACK(ISTACK+1)=IANGSTACK(ISTACK)
4330 FPSTACK(ISTACK+1,0)=FPSTACK(ISTACK,0)
4340 FPSTACK(ISTACK+1,1)=FPSTACK(ISTACK,1)
4350 ISTACK=ISTACK+1
4360 RETURN
4400 'FERME BRANCHE
4410 IF ISTACK=0 THEN PRINT "TROP DE FERMETURES DE BRANCHES":STOP
4420 ISTACK=ISTACK-1
4430 RETURN
4500 'AVANCE+DESSIN
4510 FTOX=FPSTACK(ISTACK,0)+FUNIT(IANGSTACK(ISTACK),0)*FSCLX
4520 FTOY=FPSTACK(ISTACK,1)+FUNIT(IANGSTACK(ISTACK),1)*FSCLY
4522 LINE(FPSTACK(ISTACK,0),FPSTACK(ISTACK,1))-(FTOX,FTOY),4
4524 FPSTACK(ISTACK,0)=FTOX:FPSTACK(ISTACK,1)=FTOY
4530 RETURN
